services:
  nginx:
    deploy:
      placement:
        constraints:
          - node.hostname == swarm-worker-oracle
      resources:
        limits:
          cpus: '.1'
          memory: 100M
        reservations:
          cpus: '.01'
          memory: 50M
    cap_drop:
      - ALL
    cap_add:
      - CAP_CHOWN
      - CAP_DAC_OVERRIDE
      - CAP_SETGID
      - CAP_SETUID
    environment:
      - TZ=America/Sao_Paulo
    image: nginx
    container_name: nginx
    secrets:
      - source: nginx_main_conf
        target: /etc/nginx/nginx.conf
      - source: nginx_conf
        target: /etc/nginx/conf.d/default.conf
      - source: oracle-swarm
        target: /etc/nginx/oracle-swarm
    volumes:
      - /home/ubuntu/nginx/access.log:/var/log/nginx/access.log:rw
      - /home/ubuntu/nginx/banned.conf:/etc/nginx/conf.d/banned.conf:ro
      - certbot_www:/var/www/certbot/:ro
      - certbot_conf:/etc/nginx/ssl/:ro
      - type: bind
        source: /home/ubuntu/nginx/dbip4.dat #https://www.miyuru.lk/geoiplegacy
        target: /etc/nginx/country.dat
    networks:
      - swarm-net
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
  nginx_httpe2ban:
    deploy:
      placement:
        constraints:
          - node.hostname == swarm-worker-oracle
      resources:
        limits:
          cpus: '.1'
          memory: 100M
        reservations:
          cpus: '.01'
          memory: 50M
    cap_drop:
      - ALL
    container_name: httpe2ban
    secrets:
      - source: oracle-swarm
        target: /root/.ssh/oracle-swarm
    entrypoint: ["/bin/sh", "-c", "cp /root/.ssh/oracle-swarm /root/.ssh/ssh-file && chmod 0600 /root/.ssh/ssh-file && python3 -u /httpe2ban/main.py"]
    volumes:
      - /home/ubuntu/nginx/access.log:/httpe2ban/access.log:ro
      - /home/ubuntu/nginx/banned.conf:/httpe2ban/banned.conf:rw
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    image: aleixolucas/nginx-httpe2ban
    environment:
      TZ: "America/Sao_Paulo"
      RUN_CMD_AFTER_BAN: "ssh -o 'StrictHostKeyChecking no' 10.0.0.47 && ssh -i /root/.ssh/ssh-file ubuntu@10.0.0.47 '/home/ubuntu/block_iptables.sh $IP"
      POLICY: >
        {
            "404": {"limit": 5, "window": 60},
            "403": {"limit": 3, "window": 60},
            "401": {"limit": 3, "window": 60},
            "400": {"limit": 2, "window": 60},
            "200": {"limit": 50, "window": 120}
        }
      LOG_LEVEL: "INFO"
      # BLOCK_TTL: 32400
      NGINX_LOG_JSON_MAP: >
        {
          "ip_address":"remote_addr",
          "datetime":"time_local",
          "request":"request",
          "url":"http_referer",
          "http_version":"server_protocol",
          "status_code":"status",
          "user_agent":"http_user_agent"
        }
    networks:
      - swarm-net
    depends_on:
        - nginx
  certbot:
    deploy:
      placement:
        constraints:
          - node.hostname == swarm-worker-oracle
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 86400s
    container_name: certbot
    cap_drop:
      - ALL
    depends_on:
        - nginx
    image: certbot/certbot:latest
    volumes:
    - certbot_www:/var/www/certbot/:rw
    - certbot_conf:/etc/letsencrypt/:rw
    command: certonly --webroot -w /var/www/certbot --renew-by-default --email aleixo1lucas@gmail.com -d cardsgo.ddns.net --agree-tos
    networks:
      - swarm-net
secrets:
  nginx_main_conf:
    external: true
  nginx_conf:
    external: true
  oracle-swarm:
    external: true
networks:
  swarm-net:
    external: true
volumes:
  certbot_www:
    driver: local
  certbot_conf:
    driver: local